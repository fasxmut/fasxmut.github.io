[article c++ traits type traits - c++ Unsilice
	[quickbook 1.7]
	[id cpp-unsilice-traits-type-traits]
]

Created on Oct 26, 2024

* [link cpp-silice-unsilice Up: c++ Silice Unsilice]
* [@.. Home: cppfx.xyz]

[h1:cpp-traits-type-traits [role cyan c++ traits type traits]]

Think of a trait as a small object whose main purpose is to carry information used by another object or algorithm to determine "policy" or "implementation details".

- Bjarne Stroustrup ([@https://www.stroustrup.com link])

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Type traits are an intelligency skill of c++ template metaprogramming that give you the ability to inspect, fetch, transform and use the properties (traits) of types.

[h1:cpp-examples [role cyan c++ Examples]]

[!c++]
```
static_assert(std::is_floating_point<std::float16_t>::value);
static_assert(std::is_floating_point_v<std::float16_t>);

std::cout << std::boolalpha << std::is_floating_point_v<std::float16_t> << std::endl;	// true
```

[!c++]
```
static_assert( ! std::is_floating_point_v<std::string>);

std::cout << std::boolalpha << std::is_floating_point_v<std::string> << std::endl;	// false
```

* [link cpp-silice-unsilice Up: c++ Silice Unsilice]
* [@.. Home: cppfx.xyz]

[h1 [role cyan See Also]]

[@https://en.cppreference.com/w/cpp/header/type_traits cppreference <type_traits>]



