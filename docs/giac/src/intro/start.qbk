[article Start - Giac c++
	[id start]
	[quickbook 1.7]
]

[h1:install [role cyan Install]]

Get giac source code, install the giac program and giac c++ library.

[@https://www-fourier.ujf-grenoble.fr/~parisse/giac_us.html]

[h1:use [role cyan Use giac]]

[h2:as-calculator Use giac as a calculator]

[!teletype]
```
$ giac
0>> 3/4
3/4
// Time 0
1>> 3/5.0
0.6
// Time 0
2>> (7.0-3)/3
1.33333333333
// Time 0
```

[h2:as-math-shell Use giac as mathematical shell]

Solve equation:

[!teletype]
```
9>> solve(x^3 + x^2 = 7)
list[-1/374*rootof([[3,0,-5,-187,126],[1,0,-2,0,1,0,1295]])]
// Time 0
10>> solve(x^3 + x^2 = 7.0)
list[1.63109929754]
// Time 0
```

Solve differential equation:

[!teletype]
```
11>> desolve(y' = x)
(2*c_0+x^2)/2
// Time 0
12>> desolve(y' = e^x)
c_0+exp(x)
// Time 0
```

Integral:

[!teletype]
```
13>> int(x)
x^2/2
// Time 0
14>> int(int(x))
1/2*x^3/3
// Time 0
15>> int(x^x)
integrate(exp(ln(x)*x+ln(x))/x,x)
// Time 0.01
```

[h1:giac-cpp [role cyan giac c++ library]]

Mathematical integral with giac c++:

[!c++]
```
#include <giac/config.h>
#include <giac/giac.h>
#include <iostream>

int main()
{
	auto g_ctx = giac::context{};
	auto expr = giac::gen{"x^pi", &g_ctx};
	auto integr = giac::_int(expr, &g_ctx);
	integr = giac::_simplify(integr, &g_ctx);
	std::cout << "Expression: " << expr << std::endl;
	std::cout << "Integral: " << integr << std::endl;
}
```

[!teletype]
```
$ g++ hello.cpp -std=c++23 -lgiac -o hello
$ ./hello 
Expression: x^pi
Integral: x^(pi+1)/(pi+1)

```

[br][br][br][br]
[br][br][br][br]

Jan 07, 2025

[h1:back [role cyan Back]]

[link intro Up]

[include ../../../share/foot-links.inc.qbk]

